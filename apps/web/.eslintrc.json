{
  "env": {
    "es6": true,
    "es2021": true,
    "browser": true,
    "jest": true,
    "node": true
  },
  "globals": {
    "JSX": true
  },
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:compat/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:prettier/recommended",
    "plugin:react-hooks/recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "prettier",
    "eslint:recommended",
    "next",
    "plugin:import/typescript"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2021,
    "project": ["./tsconfig.json"],
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "jsx-a11y",
    "prettier",
    "react",
    "react-hooks",
    "unused-imports"
  ],
  "ignorePatterns": ["**/*.js", "**/*.stories.ts", "**/*.stories.tsx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "parserOptions": {
        "project": ["./tsconfig.json"]
      }
    }
  ],
  "root": true,
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "prettier/prettier": ["error", {}, { "usePrettierrc": true }],
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "react/react-in-jsx-scope": "off",
    "react/display-name": "off",
    "react/prop-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-var-requires": "off",
    "linebreak-style": ["error", "unix"],
    "@typescript-eslint/no-use-before-define": [
      "error",
      { "variables": false }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "no-console": [
      "error",
      {
        "allow": ["warn", "error"]
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/semi": "off",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/dot-notation": "off",
    "arrow-body-style": ["warn", "as-needed"],
    "import/prefer-default-export": "off",
    "import/order": "off",
    "import/no-cycle": "off",
    "react/function-component-definition": "off",
    "react/jsx-props-no-spreading": "off",
    "react/require-default-props": "off",
    "no-plusplus": "off",
    "no-underscore-dangle": "off",
    "no-nested-ternary": "off",
    "eqeqeq": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": [
      "error",
      { "allowShortCircuit": true, "allowTernary": true }
    ],
    "max-params": ["error", { "max": 3 }],
    "unused-imports/no-unused-imports": "error",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": ["block", "block-like", "return"],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": ["const"],
        "next": ["block", "block-like", "return"]
      }
    ],
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": "off",
    "@next/next/no-html-link-for-pages": "off",
    "radix": ["off", "as-needed"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^T[A-Z]",
          "match": true
        }
      },
      {
        "selector": "enum",
        "format": ["PascalCase"],
        "custom": {
          "regex": "Enum$",
          "match": true
        }
      }
    ],
    "react/jsx-filename-extension": ["warn", { "extensions": [".tsx"] }]
  }
}
